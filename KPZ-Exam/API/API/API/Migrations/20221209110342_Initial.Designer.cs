// <auto-generated />
using System;
using API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API.Migrations
{
    [DbContext(typeof(APIdbContext))]
    [Migration("20221209110342_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("API.Models.Medicine", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("withPrescription")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("Id");

                    b.ToTable("Medicines");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6a5d51fe-a2fd-41eb-ad52-0f6d6fc89615"),
                            Name = "Paracetamol-Darnytsa",
                            Price = 100.0,
                            Quantity = 100,
                            Type = "Pills",
                            withPrescription = "No"
                        },
                        new
                        {
                            Id = new Guid("d9a4589f-3f4b-4aa3-9645-6a5816e7170c"),
                            Name = "Ibuprofen",
                            Price = 98.900000000000006,
                            Quantity = 50,
                            Type = "Pills",
                            withPrescription = "No"
                        },
                        new
                        {
                            Id = new Guid("7d49d3d2-103f-48de-a251-70ece51cc7dc"),
                            Name = "Smth",
                            Price = 980.5,
                            Quantity = 10,
                            Type = "Liquid",
                            withPrescription = "Yes"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
